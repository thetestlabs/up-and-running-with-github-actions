# Basic Terraform Workflow

name: Terraform

on:
  push:
    branches:
    - 'feature**'

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repo
      - name: Checkout
        uses: actions/checkout@v2

      # Install the latest version of Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Initialize the working directory
      - name: Terraform Init
        run: terraform init

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        run: terraform fmt -check
        continue-on-error: true

      # Checks that all Terraform configuration files are valid
      - name: Terraform Validate
        run: terraform validate

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: terraform plan

      # Apply the Terraform configuration
      - name: Terraform Apply
        run: terraform apply -auto-approve
      
  tflint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
      name: Checkout source code

    - uses: actions/cache@v2
      name: Cache plugin dir
      with:
        path: ~/.tflint.d/plugins
        key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

    - uses: terraform-linters/setup-tflint@v1
      name: Setup TFLint
      with:
        tflint_version: v0.29.0

    - name: Show version
      run: tflint --version

    - name: Init TFLint
      run: tflint --init

    - name: Run TFLint
      run: tflint --enable-rule=terraform_unused_declarations -f compact
