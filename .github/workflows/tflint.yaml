name: Lint
on:
  push:
    branches:
    - 'feature**'
  pull_request:
    branches:
      - main

jobs:
  tflint_pr:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
      name: Checkout source code

    - uses: actions/cache@v2
      name: Cache plugin dir
      with:
        path: ~/.tflint.d/plugins
        key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

    - uses: terraform-linters/setup-tflint@v1
      id: setup
      name: Setup TFLint
      with:
        tflint_version: v0.29.0

    - name: Init TFLint
      id: init
      run: tflint --init

    - name: Run TFLint
      id: run
      run: tflint --enable-rule=terraform_unused_declarations -f compact
      continue-on-error: true

    - name: Output
      id: output
      uses: actions/github-script@v3
      if: github.event_name == 'pull_request'
      env:
        RUN: "${{ steps.run.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          tflint_return="${PIPESTATUS[0]}" exit_code=$?
          echo "::set-output name=tflint-return-code::${tflint_return}"
          const output = `#### tflint Format Check: \`${{ steps.run.outcome }}\`
          #### tflint Initialization: \`${{ tflint-return-code }}\`
          #### tflint Plan: \`${{ tflint_return }}\`
          <details><summary>Show Plan</summary>

          \`\`\`hcl
          ${process.env.RUN}
          \`\`\`

          </details>
          `;
                      
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })